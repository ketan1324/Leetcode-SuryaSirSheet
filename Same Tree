/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    /*void preorder(TreeNode*root, vector<int>& v)
    {
        if(!root)return;
        v.push_back(root->val);
        if(root->left==nullptr)
        {
            v.push_back(0);
        }
        preorder(root->left,v);
        if(root->right==nullptr)
        {
            v.push_back(0);
        }
        
        preorder(root->right,v);
    }*/
    bool isSameTree(TreeNode* p, TreeNode* q) {
       
       /* vector<int>pa,qa;
        preorder(p,pa);
        preorder(q,qa);
        if(pa==qa)
        {
            return true;
        }
        else
            return false;*/
            if(p==nullptr && q==nullptr)return true;
            if(p==nullptr || q==nullptr)return false;
            return (p->val==q->val &&
                   isSameTree(p->left,q->left) &&
                   isSameTree(p->right,q->right) );

    }
};
