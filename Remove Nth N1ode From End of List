/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* temp,*temp1,*temp2 = head;
        int count=0;
        ListNode* newn = new ListNode();
        newn->val=1;
        newn->next=head;
        while(newn->next!=NULL)
        {
            
            newn=newn->next;
            count++;
        }
        if(count==1)
        {
            return head->next;
        }
        if(count==n)
        {
            return head->next;
        }
        int pos=count-n;
        ListNode* newn1 = new ListNode();
        newn1->val=1;
        newn1->next=head;
        for(int i=1;i<=pos;i++)
        {
            newn1=newn1->next;
        }
        cout<<"newn1";
        cout<<newn1->val;
        newn1->next=newn1->next->next;

        return head;

    }
};
