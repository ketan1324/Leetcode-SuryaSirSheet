/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int search(TreeNode* root, int max)
    {
        if(!root)   return 0;
        int count=0;
        if(root->val>=max)
        {
            count+=1;
            max=root->val;
        }
        count+=search(root->left,max);
        count+=search(root->right,max);
        return count;
    }
    int goodNodes(TreeNode* root) {
        if(!root)                           return 0;
        if(!root->left and !root->right)    return 1;

        int goodnodes=1;//root is always goodnode
        goodnodes+=search(root->left,root->val);
        goodnodes+=search(root->right,root->val);
        return goodnodes;
    }
};
